@model ResturantFinalProject.ViewModels.CategoryIndexViewModel
@using Microsoft.AspNetCore.Mvc.TagHelpers

@{
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
    ViewData["Title"] = "Categories Dashboard";
    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = ViewBag.TotalPages ?? 1;
    string searchTerm = ViewBag.SearchTerm;
}

<!-- Begin Page Content -->
<div class="container-fluid">

    <!-- Page Heading -->
    <h1 class="h3 mb-2 text-gray-800">Categories Dashboard</h1>
    <p class="mb-4">Manage your restaurant's menu categories.</p>

    <!-- DataTales Card -->
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h3 class="m-0 font-weight-bold text-primary">Categories</h3>
            <!-- Create Button -->
            <div class="form-group text-center mt-4">
                <a asp-action="Create" class="btn btn-primary">Create New Category</a>
            </div>
        </div>
        <div class="card-body">
            <!-- Search Form -->
            <form asp-action="IndexDashboard" method="get" class="mb-4">
                <div class="input-group">
                    <input type="text" name="searchTerm" class="form-control bg-light border-0 small" placeholder="Search by name or description..." value="@searchTerm" aria-label="Search">
                    <div class="input-group-append">
                        <button class="btn btn-primary" type="submit">
                            <i class="fas fa-search fa-sm"></i>
                        </button>
                    </div>
                </div>
            </form>

            @if (!string.IsNullOrEmpty(Model.Message))
            {
                <div class="alert alert-info">@Model.Message</div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-bordered text-center align-middle" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>@Html.DisplayNameFor(model => model.Categories.First().Id)</th>
                                <th>@Html.DisplayNameFor(model => model.Categories.First().Name)</th>
                                <th>@Html.DisplayNameFor(model => model.Categories.First().MenuItemCount)</th>
                                <th>@Html.DisplayNameFor(model => model.Categories.First().ActiveMenuItemCount)</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var category in Model.Categories)
                            {
                                <tr>
                                    <td>@category.Id</td>
                                    <td>@category.Name</td>
                                    <td>@category.MenuItemCount</td>
                                    <td>@category.ActiveMenuItemCount</td>
                                    <td>
                                        <a asp-action="Details" asp-route-id="@category.Id" class="btn btn-info btn-sm mx-1">View</a>
                                        <a asp-action="Edit" asp-route-id="@category.Id" class="btn btn-primary btn-sm mx-1">Edit</a>
                                        <a asp-action="Delete" asp-route-id="@category.Id" class="btn btn-danger btn-sm mx-1">Delete</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center mt-4">
                        <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                            <a class="page-link" asp-action="IndexDashboard" asp-route-page="@(currentPage - 1)" asp-route-searchTerm="@searchTerm">Previous</a>
                        </li>
                        @for (int i = 1; i <= totalPages; i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" asp-action="IndexDashboard" asp-route-page="@i" asp-route-searchTerm="@searchTerm">@i</a>
                            </li>
                        }
                        <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                            <a class="page-link" asp-action="IndexDashboard" asp-route-page="@(currentPage + 1)" asp-route-searchTerm="@searchTerm">Next</a>
                        </li>
                    </ul>
                </nav>
            }

         
        </div>
    </div>

</div>
<!-- /.container-fluid -->
@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
}